{"version":3,"sources":["webpack://spotifyWrapper/webpack/universalModuleDefinition","webpack://spotifyWrapper/webpack/bootstrap","webpack://spotifyWrapper/./src/index.js","webpack://spotifyWrapper/./src/search.js","webpack://spotifyWrapper/./src/config.js","webpack://spotifyWrapper/./src/utils.js","webpack://spotifyWrapper/./src/album.js"],"names":["module","exports","search","searchArtists","searchAlbums","searchPlaylists","getAlbum","getAlbums","getAlbumTracks","query","type","fetch","API_URL","HEADERS","then","toJSON","searchTracks","TOKEN","headers","Authorization","data","json","id","ids"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;ACnEA;;AAOA;;AAMAA,OAAOC,OAAP,GAAiB;AACbC,0BADa;AAEbC,wCAFa;AAGbC,sCAHa;AAIbC,4CAJa;AAKbC,6BALa;AAMbC,+BANa;AAObC;AAPa,CAAjB,C;;;;;;;;;;;;;;ACZA;;AACA;;;;;;AAFA;AAIO,IAAMN,0BAAS,SAATA,MAAS,CAACO,KAAD,EAAQC,IAAR;AAAA,SACpBC,MAASC,eAAT,kBAA6BH,KAA7B,cAA2CC,IAA3C,EAAmDG,eAAnD,EACGC,IADH,CACQC,eADR,CADoB;AAAA,CAAf;;AAIA,IAAMZ,wCAAgB,SAAhBA,aAAgB;AAAA,SAC3BD,OAAOO,KAAP,EAAc,QAAd,CAD2B;AAAA,CAAtB;;AAGA,IAAML,sCAAe,SAAfA,YAAe;AAAA,SAC1BF,OAAOO,KAAP,EAAc,OAAd,CAD0B;AAAA,CAArB;;AAGA,IAAMO,sCAAe,SAAfA,YAAe;AAAA,SAC1Bd,OAAOO,KAAP,EAAc,OAAd,CAD0B;AAAA,CAArB;;AAGA,IAAMJ,4CAAkB,SAAlBA,eAAkB;AAAA,SAC/BH,OAAOO,KAAP,EAAc,UAAd,CAD+B;AAAA,CAAxB,C;;;;;;;;;;;;ACjBP,IAAMQ,QAAQ,4IAAd;;AAEO,IAAML,4BAAU,4BAAhB;;AAEA,IAAMC,4BAAU;AACnBK,WAAS;AACPC,iCAA0BF,KAA1B;AADO;AADU,CAAhB,C;;;;;;;;;;;;ACJP,IAAMF,SAAS,SAATA,MAAS;AAAA,SAAQK,KAAKC,IAAL,EAAR;AAAA,CAAf;kBACeN,M;;;;;;;;;;;;;;ACCf;;AACA;;;;;;AAHA;;AAKO,IAAMT,8BAAW,SAAXA,QAAW;AAAA,WACpBK,MAASC,eAAT,gBAA2BU,EAA3B,EAAiCT,eAAjC,EAA0CC,IAA1C,CAA+CC,eAA/C,CADoB;AAAA,CAAjB;;AAGA,IAAMR,gCAAY,SAAZA,SAAY;AAAA,WACrBI,MAASC,eAAT,qBAAgCW,GAAhC,EAAuCV,eAAvC,EAAgDC,IAAhD,CAAqDC,eAArD,CADqB;AAAA,CAAlB;;AAGA,IAAMP,0CAAiB,SAAjBA,cAAiB;AAAA,WAC1BG,MAASC,eAAT,gBAA2BU,EAA3B,cAAwCT,eAAxC,EAAiDC,IAAjD,CAAsDC,eAAtD,CAD0B;AAAA,CAAvB,C","file":"spotify-wrapper.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"spotifyWrapper\"] = factory();\n\telse\n\t\troot[\"spotifyWrapper\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { \n    search,\n    searchAlbums,\n    searchArtists,\n    searchPlaylists\n} from \"./search\"\n\nimport { \n    getAlbum,\n    getAlbums,\n    getAlbumTracks\n} from \"./album\"\n\nmodule.exports = {\n    search,\n    searchArtists,\n    searchAlbums,\n    searchPlaylists,\n    getAlbum,\n    getAlbums,\n    getAlbumTracks\n}","/* global fetch */\nimport { API_URL, HEADERS } from './config'\nimport toJSON from './utils'\n\nexport const search = (query, type) =>\n  fetch(`${API_URL}/search?q=${query}&type=${type}`, HEADERS)\n    .then(toJSON)\n\nexport const searchArtists = query =>\n  search(query, 'artist')\n\nexport const searchAlbums = query =>\n  search(query, 'album')\n\nexport const searchTracks = query =>\n  search(query, 'track')\n\nexport const searchPlaylists = query =>\nsearch(query, 'playlist')\n","const TOKEN = 'BQDApK2fzfPMjiVV_Tf0bxtSY-jrpTIJH7X5jFUVbwW4UgnuuVJN3OfL1WCrNfee_0xestvxnX83eHNaxMUreqeaSD5rKHnUhBwS9C-n0547X9aFO8isFmcNknvs9kI9aNeWpa-X2A'\n\nexport const API_URL = 'https://api.spotify.com/v1'\n\nexport const HEADERS = {\n    headers: {\n      Authorization: `'Bearer ${TOKEN}'`,\n    },\n  };","const toJSON = data => data.json()\nexport default toJSON","/* global fetch */\n\nimport { API_URL, HEADERS } from \"./config\";\nimport toJSON from './utils'\n\nexport const getAlbum = id => \n    fetch(`${API_URL}/albums/${id}`, HEADERS).then(toJSON)\n\nexport const getAlbums = ids =>\n    fetch(`${API_URL}/albums/?ids=${ids}`, HEADERS).then(toJSON)\n\nexport const getAlbumTracks = id => \n    fetch(`${API_URL}/albums/${id}/tracks`, HEADERS).then(toJSON)\n"],"sourceRoot":""}